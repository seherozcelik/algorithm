import java.util.*;

class Solution {
    public int[] solution(String S, int[] P, int[] Q) {
        HashSet<Integer> Aset = new HashSet<Integer>();
        HashSet<Integer> Cset = new HashSet<Integer>();
        HashSet<Integer> Gset = new HashSet<Integer>();
        for (int i=0;i<S.length();i++){
            if("A".equals(S.substring(i, i+1))){
                Aset.add(i);
            }
            if("C".equals(S.substring(i, i+1))){
                Cset.add(i);
            }
            if("G".equals(S.substring(i, i+1))){
                Gset.add(i);
            }
        }
        int[] sol = new int[P.length];
        boolean found = false;
        for(int i =0; i<P.length; i++){
            sol[i] = 4;
            found = false;
            for (Integer ind : Aset) {
                 if(ind>=P[i] && ind<=Q[i]){
			        sol[i] = 1;
			        found = true;
			        break;
                 }
            }
            if(found){
		        continue;
		    }
		    for (Integer ind : Cset) {
                 if(ind>=P[i] && ind<=Q[i]){
			        sol[i] = 2;
			        found = true;
			        break;
                 }
            }
            if(found){
		        continue;
		    }
		    for (Integer ind : Gset) {
                 if(ind>=P[i] && ind<=Q[i]){
			        sol[i] = 3;
			        found = true;
			        break;
                 }
            }
        }
        return sol;
    }
}
